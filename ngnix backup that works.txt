Ngnix backup:



# Redirect www to non-www
server {
    listen 80;
    server_name www.vero-io.com;
    return 301 http://vero-io.com$request_uri;
}

# Main server block for vero-io.com
server {
    listen 80;
    server_name vero-io.com;

    location / {
        proxy_pass http://unix:/home/ubuntu/GoogleReviewDashboardBackend/webapp/backend.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://10.0.0.239:4000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            return 204;  # No content for preflight
        }

        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' 'http://10.0.0.239:4000' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' 'http://10.0.0.239:4000' always;
        }
    }

    location /static/ {
        alias /home/ubuntu/GoogleReviewDashboardBackend/webapp/static/;  
    }

    location /media/ {
        alias /home/ubuntu/GoogleReviewDashboardBackend/webapp/media/;  
    }

    client_max_body_size 20M;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS server block for vero-io.com
server {
    listen 443 ssl;
    server_name vero-io.com;

    ssl_certificate /etc/letsencrypt/live/vero-io.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vero-io.com/privkey.pem;

    location / {
        proxy_pass http://unix:/home/ubuntu/GoogleReviewDashboardBackend/webapp/backend.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://10.0.0.239:4000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            return 204;  # No content for preflight
        }

        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' 'http://10.0.0.239:4000' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' 'http://10.0.0.239:4000' always;
        }
    }

    location /static/ {
        alias /home/ubuntu/GoogleReviewDashboardBackend/webapp/static/;  
    }

    location /media/ {
        alias /home/ubuntu/GoogleReviewDashboardBackend/webapp/media/;  
    }

    client_max_body_size 20M;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}